FROM --platform=$BUILDPLATFORM golang:1.23.4-alpine3.20 AS golang
WORKDIR /src
RUN apk add --no-cache tzdata ca-certificates
RUN --mount=type=cache,target=/go/pkg/mod/ \
--mount=type=bind,source=go.sum,target=go.sum \
--mount=type=bind,source=go.mod,target=go.mod \
go mod download -x

FROM golang AS builder
ARG TARGETOS
ARG TARGETARCH
ARG GO_BUILD_ARGS='-ldflags="-s -w" -trimpath'
RUN --mount=type=cache,target=/go/pkg/mod/ \
--mount=type=bind,target=. \
CGO_ENABLED=0 GOOS=${TARGETOS} GOARCH=${TARGETARCH} go build ${GO_BUILD_ARGS} -o /zdap-proxyd ./cmd/zdap-proxyd && \
CGO_ENABLED=0 GOOS=${TARGETOS} GOARCH=${TARGETARCH} go build ${GO_BUILD_ARGS} -o /zdap-k8s-proxyd ./cmd/zdap-k8s-proxyd

FROM scratch
ENV TZ=UTC
# AFAICS, we shouln't need neither root-cert bundle or tz-db, for either proxy binary, but keep them commented for now so that it's quick&easy to add to the image, if it's needed.
#COPY --from=golang /etc/ssl/certs/ca-certificates.crt /etc/ssl/certs/ca-certificates.crt
#COPY --from=golang /usr/share/zoneinfo /usr/share/zoneinfo
USER 65534:65534
COPY --from=builder /zdap-*proxyd /
ENTRYPOINT [ "/zdap-proxyd" ]
# To use this image in k8s, set entrypoint to /zdap-k8s-proxyd in the deployment